name: Python Tests and Deployment

on:
  push:
    branches:
      - aces

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Step 3: Install dependencies
      - name: Install dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 5: Build and push backend image
      - name: Build and push backend
        working-directory: ./backend
        run: |
          docker build -t fajobi13/kubetasks-backend:latest .
          docker tag fajobi13/kubetasks-backend:latest fajobi13/kubetasks-backend:${{ github.sha }}
          docker push fajobi13/kubetasks-backend:latest
          docker push fajobi13/kubetasks-backend:${{ github.sha }}

      # Step 6: Build and push frontend image
      - name: Build and push frontend
        working-directory: ./frontend
        run: |
          docker build -t fajobi13/kubetasks-frontend:latest .
          docker tag fajobi13/kubetasks-frontend:latest fajobi13/kubetasks-frontend:${{ github.sha }}
          docker push fajobi13/kubetasks-frontend:latest
          docker push fajobi13/kubetasks-frontend:${{ github.sha }}

      # Step 7: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      # Step 8: Deploy to Kubernetes
      - name: Deploy to Kubernetes
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig
          export KUBECONFIG=$(pwd)/kubeconfig
          kubectl apply -f ./backend/backend-deployment.yaml --validate=false
          kubectl apply -f ./frontend/frontend-deployment.yaml --validate=false

      # Step 9: Debug Kubernetes Resources
      - name: Debug Kubernetes Resources
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          kubectl get all -A